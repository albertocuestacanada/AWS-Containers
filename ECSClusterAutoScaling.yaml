AWSTemplateFormatVersion: 2010-09-09
Description: |
    This template builds upon ContainersBase.yaml to create an ECS Cluster, a 
    Launch Configuration for creating Container Instances and an Autoscaling 
    Group to control the number of Container Instances launched in the ECS 
    Cluster.
# Explanation of autoscaling both instances and services: 
# https://aws.amazon.com/blogs/compute/automatic-scaling-with-amazon-ecs/
# Cheat: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/quickref-ecs.html

Parameters:

  KeyNameParam:
    Description: EC2 Instance SSH Key
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

Mappings:
  AMIs:
    eu-west-1:
      Name: ami-9cbe9be5

Outputs:

  ContainersAutoScalingGroupOut:
    Description: The AutoScalingGroup used to control Container Instances
    Value: !Ref AutoScalingAutoScalingGroup
    Export:
      Name: ContainersAutoScalingGroupOut

Resources:

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html
  # Note that, unlike EC2 Instances, Launch Configurations use the Security 
  # Groups property for BOTH Security Group resources and ids.
  AutoScalingLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Metadata:
      Comment: Make a Container Instance out of this EC2 Instance
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              docker: []
              ecs-init: []
          files:
            "/etc/cfn/cfn-hup.conf":
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v \
                    --stack ${AWS::StackName} \
                    --resource AutoScalingLaunchConfiguration \
                    --region ${AWS::Region}
          commands:
            docker-permissions:            
              command: usermod -a -G docker ec2-user
              cwd: /
          services:
            sysvinit:
              docker:
                enabled: true
                ensureRunning: true
              ecs:
                enabled: true
                ensureRunning: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    Properties:
      IamInstanceProfile: 
        !ImportValue ContainersIAMInstanceProfileEC2ContainerInstanceOut
      ImageId: !FindInMap [ AMIs, !Ref 'AWS::Region', Name]
      InstanceType: t2.micro
      KeyName: !Ref KeyNameParam
      SecurityGroups: 
        - !ImportValue ContainersEC2SecurityGroupSSHGroupIdOut
        - !ImportValue ContainersEC2SecurityGroupHTTPGroupIdOut
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            yum update -y
            # cfn-init handling
            # Get the latest CloudFormation package
            yum update -y aws-cfn-bootstrap
            # Start cfn-init
            /opt/aws/bin/cfn-init -v \
                --stack ${AWS::StackName} \
                --resource AutoScalingLaunchConfiguration \
                --region=${AWS::Region}
            # Start up the cfn-hup daemon to listen for changes to the 
            # AutoScalingLaunchConfiguration metadata
            /opt/aws/bin/cfn-hup
            # Download and execute ECR login command (url for fix at the start
            # of resource)
            eval $(
                aws ecr get-login \
                    --no-include-email \
                    --region eu-west-1 \
                    | sed 's|https://||' \
            )
            # Connect into the ECS Cluster with the name defined in 
            # ECSCluster.yaml
            echo ECS_CLUSTER=ecs-cluster >> /etc/ecs/ecs.config
            # All done so signal success
            /opt/aws/bin/cfn-signal -e $? \
                --stack ${AWS::StackName} \
                --resource AutoScalingAutoScalingGroup \
                --region=${AWS::Region}

  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html
  # Note that Tags and VPCZoneIdentifier (instead of SubnetId) are some of the 
  # few properties from EC2 Instance that belong in the AutoScalingGroup and 
  # not in the Launch Configuration. 
  AutoScalingAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
    Properties:
      AutoScalingGroupName: ecs-autoscalinggroup
      HealthCheckGracePeriod: 10
      HealthCheckType: ELB
      LaunchConfigurationName: !Ref AutoScalingLaunchConfiguration
      MaxSize: 4
      MinSize: 2
      Tags:
        - Key: Name
          Value: EC2ContainerInstance-AutoScaling
          PropagateAtLaunch: true
      VPCZoneIdentifier:
        - !ImportValue ContainersEC2Subnet1Out
        - !ImportValue ContainersEC2Subnet2Out

